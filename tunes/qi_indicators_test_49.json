{
 "source": "from typing import Dict, Tuple\n\nimport numpy as np\nimport qtradex as qx\n\n# Assuming the KST and FRAMA functions are defined as provided\n\n\nclass QiIndicatorsTest(qx.BaseBot):\n    def __init__(self):\n        self.tune = {\n            \"sell_thresh\": 2.0,\n            \"buy_thresh\": 2.0,\n            \"ichimoku_tenkan_period\": 9.0,\n            \"ichimoku_kijun_period\": 26.0,\n            \"ichimoku_senkou_b_period\": 52.0,\n            \"ichimoku_senkou_span\": 26.0,\n            \"kst_roc1_period\": 10.0,\n            \"kst_roc2_period\": 15.0,\n            \"kst_roc3_period\": 20.0,\n            \"kst_roc4_period\": 30.0,\n            \"kst_smoothing\": 9.0,\n            \"frama1_period\": 14.0,\n            \"frama1_fractal_period\": 2.0,\n            \"frama2_period\": 25.0,\n            \"frama2_fractal_period\": 2.0,\n            \"ravi_short\": 10.0,\n            \"ravi_long\": 50.0,\n            \"aema_period\": 10.0,\n            \"aema_alpha\": 0.1,\n            \"macd_short_period\": 10.0,\n            \"macd_long_period\": 50.0,\n            \"macd_signal_period\": 25.0,\n            \"macd_type\": 1,\n            \"tsi_long_period\": 50.0,\n            \"tsi_short_period\": 10.0,\n            \"k_period\": 50.0,\n            \"d_period\": 10.0,\n            \"eri_ma_period\": 50.0,\n            \"eri_ma_type\": 2,\n            \"atr_period\": 15.0,\n            \"atr_multiplier\": 3.0,\n            \"arsi_rsi_period\": 15.0,\n            \"arsi_adpative_period\": 15.0,\n            \"keltner_atr_period\": 15.0,\n            \"keltner_ma_period\": 15.0,\n            \"keltner_ma_type\": 2,\n            \"keltner_multiplier\": 3.0,\n            \"donchian_period\": 15.0,\n            \"kagi_reversal\": 15.0,\n            \"renko_brick\": 15.0,\n            \"mp_bin_size\": 15.0,\n            \"pa_lookback\": 15.0,\n            \"pa_threshold\": 15.0,\n            \"tbb_ma_period\": 15.0,\n            \"tbb_ma_type\": 2,\n            \"tbb_std_period\": 15.0,\n            \"tbb_deviations\": 15.0,\n            \"vortex_period\": 15.0,\n            \"zigzag_deviation\": 15.0,\n        }\n        # Optimizer clamps (min, initial, max, strength)\n        self.clamps = {\n            \"sell_thresh\": [1, 5, 100, 1],\n            \"buy_thresh\": [1, 5, 100, 1],\n            \"ichimoku_tenkan_period\": [5, 9, 30, 1],\n            \"ichimoku_kijun_period\": [5, 26, 50, 1],\n            \"ichimoku_senkou_b_period\": [5, 52, 100, 1],\n            \"ichimoku_senkou_span\": [5, 26, 100, 1],\n            \"kst_roc1_period\": [5, 10, 30, 1],\n            \"kst_roc2_period\": [5, 15, 30, 1],\n            \"kst_roc3_period\": [5, 20, 30, 1],\n            \"kst_roc4_period\": [5, 30, 50, 1],\n            \"kst_smoothing\": [1, 9, 20, 1],\n            \"frama1_period\": [5, 14, 30, 1],\n            \"frama1_fractal_period\": [1, 2, 5, 1],\n            \"frama2_period\": [5, 14, 30, 1],\n            \"frama2_fractal_period\": [1, 2, 5, 1],\n            \"ravi_short\": [5, 10, 100, 1],\n            \"ravi_long\": [5, 10, 100, 1],\n            \"aema_period\": [10, 50.0, 100, 1],\n            \"aema_alpha\": [0, 0.1, 100, 1],\n            \"macd_short_period\": [5, 10.0, 100, 1],\n            \"macd_long_period\": [5, 50.0, 100, 1],\n            \"macd_signal_period\": [5, 25.0, 100, 1],\n            \"macd_type\": [1, 1, 12, 1],\n            \"tsi_long_period\": [5, 50.0, 100, 1],\n            \"tsi_short_period\": [5, 20.0, 100, 1],\n            \"k_period\": [5, 30.0, 100, 1],\n            \"d_period\": [5, 20.0, 100, 1],\n            \"eri_ma_period\": [5, 50.0, 100, 1],\n            \"eri_ma_type\": [1, 2, 8, 1],\n            \"atr_period\": [5, 10, 100, 1],\n            \"atr_multiplier\": [0, 0.1, 100, 1],\n            \"arsi_rsi_period\": [1.0, 15.0, 30.0, 1],\n            \"arsi_adpative_period\": [1.0, 15.0, 30.0, 1],\n            \"keltner_atr_period\": [1.0, 15.0, 30.0, 1],\n            \"keltner_ma_period\": [1.0, 15.0, 30.0, 1],\n            \"keltner_ma_type\": [1, 2, 8, 1],\n            \"keltner_multiplier\": [1.0, 15.0, 30.0, 1],\n            \"donchian_period\": [1.0, 15.0, 30.0, 1],\n            \"kagi_reversal\": [1.0, 2.0, 30.0, 1],\n            \"renko_brick\": [1.0, 15.0, 30.0, 1],\n            \"mp_bin_size\": [1.0, 15.0, 30.0, 1],\n            \"pa_lookback\": [1.0, 15.0, 30.0, 1],\n            \"pa_threshold\": [1.0, 15.0, 30.0, 1],\n            \"tbb_ma_period\": [1.0, 15.0, 30.0, 1],\n            \"tbb_ma_type\": [1, 2, 8, 1],\n            \"tbb_std_period\": [1.0, 15.0, 30.0, 1],\n            \"tbb_deviations\": [1.0, 15.0, 30.0, 1],\n            \"vortex_period\": [1.0, 15.0, 30.0, 1],\n            \"zigzag_deviation\": [1.0, 15.0, 30.0, 1],\n        }\n\n    def indicators(self, data):\n        # Calculate Heikin-Ashi\n        ha_values = qx.qi.heikin_ashi(\n            dict(\n                {\n                    \"open\": data[\"open\"],\n                    \"high\": data[\"high\"],\n                    \"low\": data[\"low\"],\n                    \"close\": data[\"close\"],\n                    \"volume\": data[\"volume\"],  # Volume remains the same\n                }\n            )\n        )\n\n        # Calculate Ichimoku\n        ichimoku_values = qx.qi.ichimoku(\n            data[\"high\"],\n            data[\"low\"],\n            data[\"close\"],\n            self.tune[\"ichimoku_tenkan_period\"],\n            self.tune[\"ichimoku_kijun_period\"],\n            self.tune[\"ichimoku_senkou_b_period\"],\n            self.tune[\"ichimoku_senkou_span\"],\n        )\n\n        # Calculate KST\n        kst_values = qx.qi.kst(\n            data[\"close\"],\n            self.tune[\"kst_roc1_period\"],\n            self.tune[\"kst_roc2_period\"],\n            self.tune[\"kst_roc3_period\"],\n            self.tune[\"kst_roc4_period\"],\n            self.tune[\"kst_smoothing\"],\n        )\n        frama1 = qx.qi.frama(\n            data[\"close\"],\n            self.tune[\"frama1_period\"],\n            self.tune[\"frama1_fractal_period\"],\n        )\n        frama2 = qx.qi.frama(\n            data[\"close\"],\n            self.tune[\"frama2_period\"],\n            self.tune[\"frama2_fractal_period\"],\n        )\n        ravi = qx.qi.ravi(\n            data[\"high\"],\n            data[\"low\"],\n            data[\"close\"],\n            self.tune[\"ravi_short\"],\n            self.tune[\"ravi_long\"],\n        )\n        aema = qx.derivative(\n            qx.qi.aema(data[\"close\"], self.tune[\"aema_period\"], self.tune[\"aema_alpha\"])\n        )\n        macd, signal_line, hist = qx.qi.typed_macd(\n            data[\"close\"],\n            self.tune[\"macd_short_period\"],\n            self.tune[\"macd_long_period\"],\n            self.tune[\"macd_signal_period\"],\n            self.tune[\"macd_type\"],\n        )\n        tsi = qx.qi.tsi(\n            data[\"close\"], self.tune[\"tsi_long_period\"], self.tune[\"tsi_short_period\"]\n        )\n        smi, smi_sig = qx.qi.smi(\n            data[\"close\"],\n            data[\"high\"],\n            data[\"low\"],\n            self.tune[\"k_period\"],\n            self.tune[\"d_period\"],\n        )\n        eri_bull, eri_bear = qx.qi.eri(\n            data[\"high\"],\n            data[\"low\"],\n            data[\"close\"],\n            self.tune[\"eri_ma_period\"],\n            self.tune[\"eri_ma_type\"],\n        )\n        super_t, upt, dt = qx.qi.super_trend(\n            data[\"high\"],\n            data[\"low\"],\n            data[\"close\"],\n            self.tune[\"atr_period\"],\n            self.tune[\"atr_multiplier\"],\n        )\n        arsi = qx.qi.arsi(\n            data[\"close\"],\n            self.tune[\"arsi_rsi_period\"],\n            self.tune[\"arsi_adpative_period\"],\n        )\n        k_upper_band, k_middle_band, k_lower_band = qx.qi.keltner(\n            data[\"high\"],\n            data[\"low\"],\n            data[\"close\"],\n            self.tune[\"keltner_atr_period\"],\n            self.tune[\"keltner_ma_period\"],\n            self.tune[\"keltner_ma_type\"],\n            self.tune[\"keltner_multiplier\"],\n        )\n        d_upper_band, d_middle_band, d_lower_band = qx.qi.donchian(\n            data[\"high\"], data[\"low\"], self.tune[\"donchian_period\"]\n        )\n        kagi = qx.qi.kagi(data[\"close\"], self.tune[\"kagi_reversal\"])\n        renko = qx.qi.renko(data[\"close\"], self.tune[\"renko_brick\"])\n        tick_i = qx.qi.tick_indicator(data[\"close\"])\n        trin_i = qx.qi.trin_indicator(data[\"close\"], data[\"volume\"])\n        price_bins, volume_profile = qx.qi.market_profile(\n            data[\"close\"], data[\"volume\"], self.tune[\"mp_bin_size\"]\n        )\n        a_support, a_resistance = qx.qi.price_action(\n            data[\"close\"], self.tune[\"pa_lookback\"], self.tune[\"pa_threshold\"]\n        )\n        tbb_upper_band, tbb_middle_bband, tbb_lower_band = qx.qi.typed_bbands(\n            data[\"close\"],\n            self.tune[\"tbb_ma_period\"],\n            self.tune[\"tbb_ma_type\"],\n            self.tune[\"tbb_std_period\"],\n            self.tune[\"tbb_deviations\"],\n        )\n        vortex_plus, vortex_minus, vortex = qx.qi.vortex(\n            data[\"high\"], data[\"low\"], data[\"close\"], self.tune[\"vortex_period\"]\n        )\n        zigzag, steps = qx.qi.zigzag(data[\"close\"], self.tune[\"zigzag_deviation\"])\n\n        return {\n            \"ha_close\": ha_values[\"ha_close\"],\n            \"ha_open\": ha_values[\"ha_open\"],\n            \"tenkan_sen\": ichimoku_values[0],\n            \"kijun_sen\": ichimoku_values[1],\n            \"kst\": kst_values[0],\n            \"kst_signal\": kst_values[1],\n            \"frama1\": frama1,\n            \"frama2\": frama1,\n            \"ravi\": ravi,\n            \"aema\": aema,\n            \"macd\": macd,\n            \"signal_line\": signal_line,\n            \"hist\": hist,\n            \"tsi\": tsi,\n            \"smi\": smi,\n            \"smi_sig\": smi_sig,\n            \"eri_bull\": eri_bull,\n            \"eri_bear\": eri_bear,\n            \"super_t\": super_t,\n            # \"arsi\": arsi, # FIXME EMPTY ARRAY breaks plot\n            \"k_upper_band\": k_upper_band,\n            \"k_middle_band\": k_middle_band,\n            \"k_lower_band\": k_lower_band,\n            \"d_upper_band\": d_upper_band,\n            \"d_middle_band\": d_middle_band,\n            \"d_lower_band\": d_lower_band,\n            \"kagi\": kagi,\n            \"renko\": renko,\n            # \"tick_i\": tick_i,\n            # \"trin_i\": trin_i,\n            # \"price_bins\": price_bins,\n            # \"volume_profile\": volume_profile,\n            # \"a_support\": a_support,\n            # \"a_resistance\": a_resistance,\n            # \"vortex_plus\": vortex_plus,\n            # \"vortex_minus\": vortex_minus,\n            # \"vortex\": vortex,\n            # \"zigzag\": zigzag,\n            # \"steps\": steps,\n        }\n\n    def plot(self, *args):\n        qx.plot(\n            self.info,\n            *args,\n            (\n                (\"eri_bull\", \"eri_bull\", \"lime\", 3, \"\"),\n                (\"eri_bear\", \"eri_bear\", \"tomato\", 3, \"\"),\n                (\"tsi\", \"TSI\", \"teal\", 2, \"\"),\n                (\"smi\", \"SMI\", \"cyan\", 2, \"\"),\n                (\"smi_sig\", \"SMI Signal\", \"blue\", 2, \"\"),\n                (\"macd\", \"MACD\", \"deepskyblue\", 3, \"\"),\n                (\"signal_line\", \"signal line\", \"white\", 3, \"\"),\n                (\"hist\", \"hist\", \"aqua\", 3, \"MACD\"),\n                (\"aema\", \"AEMA\", \"magenta\", 1, \"\"),\n                (\"ha_close\", \"Heikin-Ashi Close\", \"green\", 0, \"Confluence\"),\n                (\"ha_open\", \"Heikin-Ashi Open\", \"red\", 0, \"Confluence\"),\n                (\"tenkan_sen\", \"Tenkan-sen\", \"blue\", 0, \"Confluence\"),\n                (\"kijun_sen\", \"Kijun-sen\", \"orange\", 0, \"Confluence\"),\n                (\"frama1\", \"FRAMA 1\", \"yellow\", 0, \"Confluence\"),\n                (\"frama2\", \"FRAMA 2\", \"green\", 0, \"Confluence\"),\n                (\"kst\", \"KST\", \"purple\", 1, \"KST\"),\n                (\"kst_signal\", \"KST Signal\", \"brown\", 1, \"KST\"),\n                (\"ravi\", \"Ravi\", \"magenta\", 2, \"ravi\"),\n                (\"super_t\", \"Super Trend\", \"yellow\", 0, \"\"),\n                # (\"arsi\", \"Arsi\", \"coral\", 2, \"\"),\n                (\"k_upper_band\", \"K Upper Band\", \"lightblue\", 0, \"\"),\n                (\"k_middle_band\", \"K Middle Band\", \"lightgreen\", 0, \"\"),\n                (\"k_lower_band\", \"K Lower Band\", \"lightpink\", 0, \"\"),\n                (\"d_upper_band\", \"D Upper Band\", \"salmon\", 0, \"\"),\n                (\"d_middle_band\", \"D Middle Band\", \"peachpuff\", 0, \"\"),\n                (\"d_lower_band\", \"D Lower Band\", \"khaki\", 0, \"\"),\n                (\"kagi\", \"Kagi\", \"plum\", 0, \"\"),\n                (\"renko\", \"Renko\", \"lavender\", 0, \"\"),\n                # (\"tick_i\", \"Tick Indicator\", \"gold\", 0, \"\"),\n                # (\"trin_i\", \"TRIN Indicator\", \"orchid\", 0, \"\"),\n                # (\"price_bins\", \"Price Bins\", \"lightgray\", 0, \"\"),\n                # (\"volume_profile\", \"Volume Profile\", \"lightcoral\", 2, \"\"),\n                # (\"a_support\", \"A Support\", \"lightseagreen\", 0, \"\"),\n                # (\"a_resistance\", \"A Resistance\", \"lightsalmon\", 0, \"\"),\n                # (\"vortex_plus\", \"Vortex Plus\", \"darkviolet\", 2, \"\"),\n                # (\"vortex_minus\", \"Vortex Minus\", \"mediumseagreen\", 2, \"\"),\n                # (\"vortex\", \"Vortex\", \"tomato\", 2, \"\"),\n                # (\"zigzag\", \"Zigzag\", \"slateblue\", 0, \"\"),\n                # (\"steps\", \"Steps\", \"goldenrod\", 0, \"\"),\n            ),\n        )\n\n    def strategy(self, state, indicators):\n        # Basic strategy logic\n        if state[\"last_trade\"] is None:\n            return qx.Buy()\n\n        conditions = [\n            indicators[\"ha_close\"] > indicators[\"ha_open\"],\n            indicators[\"tenkan_sen\"] > indicators[\"kijun_sen\"],\n            indicators[\"kst\"] > indicators[\"kst_signal\"],\n            indicators[\"frama1\"] < indicators[\"frama2\"],\n            indicators[\"ravi\"] > 0,\n            indicators[\"aema\"] > 0,\n            indicators[\"hist\"] > indicators[\"macd\"],\n            indicators[\"tsi\"] > 0,\n            indicators[\"smi\"] > indicators[\"smi_sig\"],\n        ]\n\n        bearish = sum([int(i) for i in conditions])\n        bullish = sum([int(not i) for i in conditions])\n\n        # Buy signal conditions\n        if bearish > self.tune[\"sell_thresh\"]:\n            return qx.Sell()\n\n        # Sell signal conditions\n        if bullish > self.tune[\"buy_thresh\"]:\n            return qx.Buy()\n\n        return None\n\n    def fitness(self, states, raw_states, asset, currency):\n        return [\n            \"roi_gross\",\n            \"sortino_ratio\",\n            \"trade_win_rate\",\n        ], {}\n\n\ndef main():\n    asset, currency = \"BTC\", \"USDT\"\n    wallet = qx.PaperWallet({asset: 0, currency: 1})\n    data = qx.Data(\n        exchange=\"kucoin\",\n        asset=asset,\n        currency=currency,\n        begin=\"2021-01-01\",\n        end=\"2023-01-01\",\n    )\n\n    bot = QiIndicatorsTest()\n    qx.dispatch(bot, data, wallet)\n\n\nif __name__ == \"__main__\":\n    main()\n",
 "BEST ROI TUNE_Sat Apr 19 20:48:51 2025": {
  "tune": {
   "sell_thresh": 2.0,
   "buy_thresh": 2.0,
   "ichimoku_tenkan_period": 9.0,
   "ichimoku_kijun_period": 26.0,
   "ichimoku_senkou_b_period": 52.0,
   "ichimoku_senkou_span": 26.0,
   "kst_roc1_period": 10.0,
   "kst_roc2_period": 15.0,
   "kst_roc3_period": 20.0,
   "kst_roc4_period": 30.0,
   "kst_smoothing": 9.0,
   "frama1_period": 14.0,
   "frama1_fractal_period": 2.0,
   "frama2_period": 25.0,
   "frama2_fractal_period": 2.0,
   "ravi_short": 10.0,
   "ravi_long": 50.0,
   "aema_period": 10.0,
   "aema_alpha": 0.1,
   "macd_short_period": 10.0,
   "macd_long_period": 50.0,
   "macd_signal_period": 25.0,
   "macd_type": 1,
   "tsi_long_period": 50.0,
   "tsi_short_period": 10.0,
   "k_period": 50.0,
   "d_period": 10.0,
   "eri_ma_period": 50.0,
   "eri_ma_type": 2,
   "atr_period": 15.0,
   "atr_multiplier": 3.0,
   "arsi_rsi_period": 15.0,
   "arsi_adpative_period": 15.0,
   "keltner_atr_period": 15.0,
   "keltner_ma_period": 15.0,
   "keltner_ma_type": 2,
   "keltner_multiplier": 3.0,
   "donchian_period": 15.0,
   "kagi_reversal": 15.0,
   "renko_brick": 15.0,
   "mp_bin_size": 15.0,
   "pa_lookback": 15.0,
   "pa_threshold": 15.0,
   "tbb_ma_period": 15.0,
   "tbb_ma_type": 2,
   "tbb_std_period": 15.0,
   "tbb_deviations": 15.0,
   "vortex_period": 15.0,
   "zigzag_deviation": 15.0
  },
  "results": {
   "roi": 1.0,
   "sortino_ratio": -0.050000000000000044,
   "trade_win_rate": 0
  }
 },
 "BEST SORTINO_RATIO TUNE_Sat Apr 19 20:48:51 2025": {
  "tune": {
   "sell_thresh": 2.0,
   "buy_thresh": 2.0,
   "ichimoku_tenkan_period": 9.0,
   "ichimoku_kijun_period": 26.0,
   "ichimoku_senkou_b_period": 52.0,
   "ichimoku_senkou_span": 26.0,
   "kst_roc1_period": 10.0,
   "kst_roc2_period": 15.0,
   "kst_roc3_period": 20.0,
   "kst_roc4_period": 30.0,
   "kst_smoothing": 9.0,
   "frama1_period": 14.0,
   "frama1_fractal_period": 2.0,
   "frama2_period": 25.0,
   "frama2_fractal_period": 2.0,
   "ravi_short": 10.0,
   "ravi_long": 50.0,
   "aema_period": 10.0,
   "aema_alpha": 0.1,
   "macd_short_period": 10.0,
   "macd_long_period": 50.0,
   "macd_signal_period": 25.0,
   "macd_type": 1,
   "tsi_long_period": 50.0,
   "tsi_short_period": 10.0,
   "k_period": 50.0,
   "d_period": 10.0,
   "eri_ma_period": 50.0,
   "eri_ma_type": 2,
   "atr_period": 15.0,
   "atr_multiplier": 3.0,
   "arsi_rsi_period": 15.0,
   "arsi_adpative_period": 15.0,
   "keltner_atr_period": 15.0,
   "keltner_ma_period": 15.0,
   "keltner_ma_type": 2,
   "keltner_multiplier": 3.0,
   "donchian_period": 15.0,
   "kagi_reversal": 15.0,
   "renko_brick": 15.0,
   "mp_bin_size": 15.0,
   "pa_lookback": 15.0,
   "pa_threshold": 15.0,
   "tbb_ma_period": 15.0,
   "tbb_ma_type": 2,
   "tbb_std_period": 15.0,
   "tbb_deviations": 15.0,
   "vortex_period": 15.0,
   "zigzag_deviation": 15.0
  },
  "results": {
   "roi": 1.0,
   "sortino_ratio": -0.050000000000000044,
   "trade_win_rate": 0
  }
 },
 "BEST TRADE_WIN_RATE TUNE_Sat Apr 19 20:48:51 2025": {
  "tune": {
   "sell_thresh": 1.9994164464272273,
   "buy_thresh": 2.0,
   "ichimoku_tenkan_period": 9.0,
   "ichimoku_kijun_period": 26.0,
   "ichimoku_senkou_b_period": 52.0,
   "ichimoku_senkou_span": 26.0,
   "kst_roc1_period": 10.0,
   "kst_roc2_period": 15.0,
   "kst_roc3_period": 20.0,
   "kst_roc4_period": 30.0,
   "kst_smoothing": 9.0,
   "frama1_period": 14.0,
   "frama1_fractal_period": 2.0,
   "frama2_period": 25.0,
   "frama2_fractal_period": 2.0,
   "ravi_short": 10.0,
   "ravi_long": 50.0,
   "aema_period": 10.0,
   "aema_alpha": 0.1,
   "macd_short_period": 10.0,
   "macd_long_period": 50.0,
   "macd_signal_period": 25.0,
   "macd_type": 1,
   "tsi_long_period": 50.0,
   "tsi_short_period": 10.0,
   "k_period": 50.0,
   "d_period": 10.0,
   "eri_ma_period": 50.0,
   "eri_ma_type": 2,
   "atr_period": 15.0,
   "atr_multiplier": 3.0,
   "arsi_rsi_period": 15.0,
   "arsi_adpative_period": 15.0,
   "keltner_atr_period": 15.0,
   "keltner_ma_period": 15.0,
   "keltner_ma_type": 2,
   "keltner_multiplier": 3.0,
   "donchian_period": 15.0,
   "kagi_reversal": 15.0,
   "renko_brick": 15.0,
   "mp_bin_size": 15.0,
   "pa_lookback": 15.0,
   "pa_threshold": 15.0,
   "tbb_ma_period": 15.0,
   "tbb_ma_type": 2,
   "tbb_std_period": 15.0,
   "tbb_deviations": 15.0,
   "vortex_period": 15.0,
   "zigzag_deviation": 15.0
  },
  "results": {
   "roi": 1.0,
   "sortino_ratio": -0.050000000000000044,
   "trade_win_rate": 1.0
  }
 },
 "BEST ROI TUNE_Sat Apr 19 20:50:31 2025": {
  "tune": {
   "sell_thresh": 2.0,
   "buy_thresh": 2.0,
   "ichimoku_tenkan_period": 9.0,
   "ichimoku_kijun_period": 26.0,
   "ichimoku_senkou_b_period": 52.0,
   "ichimoku_senkou_span": 26.0,
   "kst_roc1_period": 10.0,
   "kst_roc2_period": 15.0,
   "kst_roc3_period": 20.0,
   "kst_roc4_period": 30.0,
   "kst_smoothing": 9.0,
   "frama1_period": 14.0,
   "frama1_fractal_period": 2.0,
   "frama2_period": 25.0,
   "frama2_fractal_period": 2.0,
   "ravi_short": 10.0,
   "ravi_long": 50.0,
   "aema_period": 10.0,
   "aema_alpha": 0.1,
   "macd_short_period": 10.0,
   "macd_long_period": 50.0,
   "macd_signal_period": 25.0,
   "macd_type": 1,
   "tsi_long_period": 50.0,
   "tsi_short_period": 10.0,
   "k_period": 50.0,
   "d_period": 10.0,
   "eri_ma_period": 50.0,
   "eri_ma_type": 2,
   "atr_period": 15.0,
   "atr_multiplier": 3.0,
   "arsi_rsi_period": 15.0,
   "arsi_adpative_period": 15.0,
   "keltner_atr_period": 15.0,
   "keltner_ma_period": 15.0,
   "keltner_ma_type": 2,
   "keltner_multiplier": 3.0,
   "donchian_period": 15.0,
   "kagi_reversal": 15.0,
   "renko_brick": 15.0,
   "mp_bin_size": 15.0,
   "pa_lookback": 15.0,
   "pa_threshold": 15.0,
   "tbb_ma_period": 15.0,
   "tbb_ma_type": 2,
   "tbb_std_period": 15.0,
   "tbb_deviations": 15.0,
   "vortex_period": 15.0,
   "zigzag_deviation": 15.0
  },
  "results": {
   "roi": 1.0,
   "sortino_ratio": -0.050000000000000044,
   "trade_win_rate": 0
  }
 },
 "BEST SORTINO_RATIO TUNE_Sat Apr 19 20:50:31 2025": {
  "tune": {
   "sell_thresh": 2.0,
   "buy_thresh": 2.0,
   "ichimoku_tenkan_period": 9.0,
   "ichimoku_kijun_period": 26.0,
   "ichimoku_senkou_b_period": 52.0,
   "ichimoku_senkou_span": 26.0,
   "kst_roc1_period": 10.0,
   "kst_roc2_period": 15.0,
   "kst_roc3_period": 20.0,
   "kst_roc4_period": 30.0,
   "kst_smoothing": 9.0,
   "frama1_period": 14.0,
   "frama1_fractal_period": 2.0,
   "frama2_period": 25.0,
   "frama2_fractal_period": 2.0,
   "ravi_short": 10.0,
   "ravi_long": 50.0,
   "aema_period": 10.0,
   "aema_alpha": 0.1,
   "macd_short_period": 10.0,
   "macd_long_period": 50.0,
   "macd_signal_period": 25.0,
   "macd_type": 1,
   "tsi_long_period": 50.0,
   "tsi_short_period": 10.0,
   "k_period": 50.0,
   "d_period": 10.0,
   "eri_ma_period": 50.0,
   "eri_ma_type": 2,
   "atr_period": 15.0,
   "atr_multiplier": 3.0,
   "arsi_rsi_period": 15.0,
   "arsi_adpative_period": 15.0,
   "keltner_atr_period": 15.0,
   "keltner_ma_period": 15.0,
   "keltner_ma_type": 2,
   "keltner_multiplier": 3.0,
   "donchian_period": 15.0,
   "kagi_reversal": 15.0,
   "renko_brick": 15.0,
   "mp_bin_size": 15.0,
   "pa_lookback": 15.0,
   "pa_threshold": 15.0,
   "tbb_ma_period": 15.0,
   "tbb_ma_type": 2,
   "tbb_std_period": 15.0,
   "tbb_deviations": 15.0,
   "vortex_period": 15.0,
   "zigzag_deviation": 15.0
  },
  "results": {
   "roi": 1.0,
   "sortino_ratio": -0.050000000000000044,
   "trade_win_rate": 0
  }
 },
 "BEST TRADE_WIN_RATE TUNE_Sat Apr 19 20:50:31 2025": {
  "tune": {
   "sell_thresh": 1.0,
   "buy_thresh": 2.0,
   "ichimoku_tenkan_period": 9.0,
   "ichimoku_kijun_period": 26.0,
   "ichimoku_senkou_b_period": 52.0,
   "ichimoku_senkou_span": 26.0,
   "kst_roc1_period": 10.0,
   "kst_roc2_period": 15.0,
   "kst_roc3_period": 20.0,
   "kst_roc4_period": 30.0,
   "kst_smoothing": 9.0,
   "frama1_period": 14.0,
   "frama1_fractal_period": 2.0,
   "frama2_period": 25.0,
   "frama2_fractal_period": 2.0,
   "ravi_short": 10.0,
   "ravi_long": 50.0,
   "aema_period": 10.0,
   "aema_alpha": 0.1,
   "macd_short_period": 10.0,
   "macd_long_period": 50.0,
   "macd_signal_period": 25.0,
   "macd_type": 1,
   "tsi_long_period": 50.0,
   "tsi_short_period": 10.0,
   "k_period": 50.0,
   "d_period": 10.0,
   "eri_ma_period": 50.0,
   "eri_ma_type": 2,
   "atr_period": 15.0,
   "atr_multiplier": 3.0,
   "arsi_rsi_period": 15.0,
   "arsi_adpative_period": 15.0,
   "keltner_atr_period": 15.0,
   "keltner_ma_period": 15.0,
   "keltner_ma_type": 2,
   "keltner_multiplier": 3.0,
   "donchian_period": 15.0,
   "kagi_reversal": 15.0,
   "renko_brick": 15.0,
   "mp_bin_size": 15.0,
   "pa_lookback": 15.0,
   "pa_threshold": 15.0,
   "tbb_ma_period": 15.0,
   "tbb_ma_type": 2,
   "tbb_std_period": 15.0,
   "tbb_deviations": 15.0,
   "vortex_period": 15.0,
   "zigzag_deviation": 15.0
  },
  "results": {
   "roi": 1.0,
   "sortino_ratio": -0.050000000000000044,
   "trade_win_rate": 1.0
  }
 }
}